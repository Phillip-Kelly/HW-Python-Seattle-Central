1. Why are functions advantageous to have in your programs?
A major purpose of functions is to group code that gets executed multiple times.


2. When does the code in a function execute: when the function is defined or when the function is called?
The code in a function executes when the function is called, not when the function is defined.

	

3. What statement creates a function?
The def statement

4. What is the difference between a function and a function call?
A function consists of the def statement and the code in its def clause.

	

5. How many global scopes are there in a Python program? How many local scopes?
There is one global scope, and a local scope is created whenever a function is called.

6. What happens to variables in a local scope when the function call returns?
When a function returns, the local scope is eliminated, and all the variables in it are forgotten.
	

7. What is a return value? Can a return value be part of an expression?
the value that a function call evaluates to is called the return value of the function
	

8. If a function does not have a return statement, what is the return value of a call to that function?
The return value is None	

9. How can you force a variable in a function to refer to the global variable?
A global statement will force a variable in a function to refer to the global variable.

10. What is the data type of None?
NoneType.

11. What does the import areallyourpetsnamederic statement do?
It imports nothing
	

12. If you had a function named bacon() in a module named spam, how would you call it after importing spam?
spam.bacon().
	

13. How can you prevent a program from crashing when it gets an error?
Use a try clause.
	

14. What goes in the try clause? What goes in the except clause?

The code that could potentially cause an error goes in the try clause.
The code that executes if an error happens goes in the except clause.

